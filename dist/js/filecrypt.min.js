var FileCryptUtil=function(){};FileCryptUtil.convertFileSize=function(t){var i=-1,e=[" kB"," MB"," GB"," TB","PB","EB","ZB","YB"];do t/=1024,i++;while(t>1024);return Math.max(t,.1).toFixed(1)+e[i]},FileCryptUtil.str2ab=function(t){for(var i=new ArrayBuffer(t.length),e=new Uint8Array(i),n=0,s=t.length;n<s;n++)e[n]=t.charCodeAt(n);return i};var FileCryptWorkerCollection=function(t){this.options=$.extend({},this.DEFAULTS,t),this.items=[],this._initComponent()};FileCryptWorkerCollection.prototype={DEFAULTS:{count:4,listeners:{success:function(t){},failure:function(t){},terminate:function(t){}}},_initComponent:function(){for(var t=0;t<this.options.count;t++){var i=new Worker("/dist/js/worker.encrypt.js");i.onError=this.options.listeners.failure,this.items.push(i)}this.onSuccess(this.options.listeners.success)},_forEach:function(t){return this.items.forEach(function(i){t(i)}),this},getLength:function(){return this.items.length},getAt:function(t){return this.items[t]},onSuccess:function(t){return this._forEach(function(i){i.addEventListener("message",t,!1)}),this},terminate:function(t){return this._forEach(function(t){t.terminate()}),"terminate"in this.options.listeners&&$.isFunction(this.options.listeners.terminate)&&this.options.listeners.terminate(this,t),this}};var FileCryptHashCollection=function(t){this.options=$.extend({},this.DEFAULTS,t),this.items=[],this._initComponent(this.options.items)};FileCryptHashCollection.prototype={DEFAULTS:{items:[],delimiter:"/--delimiter--/"},_initComponent:function(t){t.forEach($.proxy(this.add,this))},getLength:function(){return this.items.length},forEach:function(t){return this.items.forEach($.proxy(function(i,e){t(i,e,this)},this)),this},add:function(t,i){return void 0!==i?this.items[i]=t:this.items.push(t),this}},FileCryptHashCollection.prototype.toString=function(){return this.items.join(this.options.delimiter)};var FileCryptBlobCollection=function(t){this.options=$.extend({},this.DEFAULTS,t),this._initComponent(this.options.file)};FileCryptBlobCollection.prototype={DEFAULTS:{chunk_size:1048576},_initComponent:function(t){this.file=t,this.items=[],t.slice=t.mozSlice||t.webkitSlice||t.slice;for(var i=0;i<t.size;)this.add(t.slice(i,i+=this.options.chunk_size))},getLength:function(){return this.items.length},forEach:function(t){return this.items.forEach($.proxy(function(i,e){t(i,e,this)},this)),this},add:function(t,i){return void 0!==i?this.items[i]=t:this.items.push(t),this}};var FileCrypt=function(t){this.options=$.extend({},this.DEFAULTS,t),this._initComponent(this.options.file,this.options.passphrase)};FileCrypt.prototype={DEFAULTS:{file:{},passphrase:"",chunk_size:1048576,delimiter:"/file-crypt-delimiter/",listeners:{crypting:function(){},crypted:function(){}},proxy:{url:"",type:"POST",contentType:"text/plain",processData:!1,cache:!1}},setFile:function(t){return this.options.file=t,this},setPassphrase:function(t){return this.options.passphrase=t,this},setChunkSize:function(t){return this.options.options.chunk_size=t,this},getFileName:function(){return this.options.file.name},encrypting:function(t){return $.isFunction(t)?this.options.listeners.crypting=t:$.isPlainObject(t)&&("crypting"in t&&$.isFunction(t.crypting)&&(this.options.listeners.crypting=t.crypting),"crypted"in t&&$.isFunction(t.crypted)&&(this.options.listeners.crypted=t.crypted)),this._encrypted=this._encrypt(new FileCryptBlobCollection({file:this.options.file,chunk_size:this.options.chunk_size}),this.options.passphrase),this},_initComponent:function(t,i){t&&i&&(this.setFile(t),this.setPassphrase(i),this.encrypting())},_encrypt:function(t,i){var e=new FileCryptHashCollection({delimiter:this.options.delimiter}),n=new FileCryptWorkerCollection({count:t.getLength(),listeners:{terminate:this.options.listeners.crypted}}),s=0;return n.onSuccess($.proxy(function(i){++s,this.options.listeners.crypting({process:100/t.getLength()*s}),e.add(i.data.data,i.data.index),s===t.getLength()&&n.terminate(e)},this)),t.forEach(function(t,e){n.getAt(e%n.getLength()).postMessage({part:t,index:e,passphrase:i})}),e},save:function(t){var i=$.extend({headers:{"X-File-Content-Length":this.options.file.size,"X-File-Content-Type":this.options.file.type,"X-File-Name":this.options.file.name},data:this._encrypted.toString()},this.options.proxy,t);return $.ajax(i)}},FileCrypt.factory=function(t,i){return new this({file:t,passphrase:i})};var FileDecryptWorkerCollection=function(t){this.options=$.extend({},this.DEFAULTS,t),this.items=[],this._initComponent(this.options.count)};FileDecryptWorkerCollection.prototype={DEFAULTS:{count:4,listeners:{success:function(t){},failure:function(t){},terminate:function(t){}}},_initComponent:function(t){for(var i=0;i<t;i++){var e=new Worker("/dist/js/worker.decrypt.js");e.onError=this.options.listeners.failure,this.items.push(e)}this.onSuccess(this.options.listeners.success)},_forEach:function(t){return this.items.forEach(function(i){t(i)}),this},getLength:function(){return this.items.length},getAt:function(t){return this.items[t]},onSuccess:function(t){return this._forEach(function(i){i.addEventListener("message",t,!1)}),this},terminate:function(t){return this._forEach(function(t){t.terminate()}),this.options.listeners.terminate(this,t),this}};var FileDecryptBlobCollection=function(t){this.options=$.extend({},this.DEFAULTS,t),this.items=[],this._initComponent(this.options.items)};FileDecryptBlobCollection.prototype={DEFAULTS:{items:[]},_initComponent:function(t){t.forEach($.proxy(this.add,this))},getLength:function(){return this.items.length},forEach:function(t){return this.items.forEach($.proxy(function(i,e){t(i,e,this)},this)),this},add:function(t,i){return void 0!==i?this.items[i]=t:this.items.push(t),this}},FileDecryptBlobCollection.prototype.toString=function(){return this.items.join("")};var FileDecrypt=function(t){this.options=$.extend({},this.DEFAULTS,t),this._initComponent(this.options.url)};FileDecrypt.prototype={DEFAULTS:{url:"",passphrase:"",delimiter:"/file-crypt-delimiter/",listeners:{download:function(t){},downloaded:function(t){},decrypting:function(t){},decripted:function(t){}}},setUrl:function(t){return this.options.url=t,this},setPassphrase:function(t){return this.options.passphrase=t,this},setDelimiter:function(t){this.options.delimiter=t},getFileName:function(){return this.fileName},download:function(){$.ajax({url:this.options.url,type:"GET",success:$.proxy(function(t,i,e){this.fileName=e.getResponseHeader("X-File-Name"),this.fileContentType=e.getResponseHeader("X-File-Content-Type"),this.fileContentLength=e.getResponseHeader("X-File-Content-Length"),this._blobCollection=new FileCryptHashCollection({items:t.split(this.options.delimiter)}),"downloaded"in this.options.listeners&&$.isFunction(this.options.listeners.downloaded)&&this.options.listeners.downloaded()},this)})},_initComponent:function(t){t&&(this.setUrl(t),this.download())},decrypting:function(t){$.isPlainObject(t)&&"decripted"in t&&$.isFunction(t.decripted)&&(this.options.listeners.decripted=t.decripted),this._decrypt(this._blobCollection,this.options.passphrase)},_decrypt:function(t,i){var e=new FileDecryptWorkerCollection({count:t.getLength(),listeners:{terminate:$.proxy(function(t,i){var e=i.toString(),n=new Blob([FileCryptUtil.str2ab(e)],{type:this.fileContentType}),s=new FileReader;s.onload=this.options.listeners.decripted,s.readAsDataURL(n)},this)}}),n=0,s=new FileDecryptBlobCollection;return e.onSuccess($.proxy(function(i){++n,i.data.success&&s.add(i.data.part,i.data.index),n===t.getLength()&&e.terminate(s)},this)),t.forEach(function(t,n){e.getAt(n%e.getLength()).postMessage({hash:t,index:n,passphrase:i})}),s}};